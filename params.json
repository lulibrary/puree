{
  "name": "Pur√©e",
  "tagline": "A Ruby client for the Pure Research Information System API.",
  "body": "# Pur&#233;e [![Gem Version](https://badge.fury.io/rb/puree.svg)](https://badge.fury.io/rb/puree)\r\nPur&#233;e consumes the Pure Research Information System API and puts the metadata into simple data structures.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'puree'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install puree\r\n\r\n\r\n## Usage\r\nThe following examples are for the Dataset resource type.\r\n\r\n### Single resource\r\nTell Pur&#233;e what you are looking for...\r\n\r\n```ruby\r\nd = Puree::Dataset.new\r\nmetadata = d.find uuid: 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\r\n```\r\n...and get the data from a hash...\r\n\r\n```ruby\r\nmetadata['doi']\r\n```\r\n\r\n...or using a method...\r\n\r\n```ruby\r\nd.doi\r\n```\r\n\r\n### Collection of resources\r\nTell Pur&#233;e what you are looking for...\r\n\r\n```ruby\r\nc = Puree::Collection.new resource: :dataset\r\nmetadata = c.find limit: 50\r\n```\r\n...and get the data from an array of hashes or from an array of instances.\r\n\r\n## Documentation\r\n[API in YARD](http://www.rubydoc.info/gems/puree/frames)\r\n\r\n[Detailed usage](https://github.com/lulibrary/puree/wiki)\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}