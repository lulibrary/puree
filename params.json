{
  "name": "PurÃ©e",
  "tagline": "A Ruby client for the Pure Research Information System API.",
  "body": "# Pur&#233;e [![Gem Version](https://badge.fury.io/rb/puree.svg)](https://badge.fury.io/rb/puree)\r\nA Ruby client for the Pure Research Information System API.\r\n\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'puree'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install puree\r\n\r\n## Usage\r\n### Configuration\r\nSet the endpoint for Pure (e.g. `http://www.example.com/ws/rest`) and the\r\nauthentication credentials. Basic authentication can be turned off.\r\n\r\n```ruby\r\n\r\n# Global settings using a block\r\nPuree.configure do |config|\r\n  config.endpoint   = ENV['PURE_ENDPOINT']   # optional, default nil\r\n  config.username   = ENV['PURE_USERNAME']   # optional, default nil\r\n  config.password   = ENV['PURE_PASSWORD']   # optional, default nil\r\n  config.basic_auth = true                   # optional, default false\r\nend\r\n\r\n# Global settings individually\r\nPuree.endpoint   = ENV['PURE_ENDPOINT']      # optional, default nil\r\nPuree.username   = ENV['PURE_USERNAME']      # optional, default nil\r\nPuree.password   = ENV['PURE_PASSWORD']      # optional, default nil\r\nPuree.basic_auth = true                      # optional, default false\r\n\r\n# Use global settings\r\nd = Puree::Dataset.new\r\n\r\n# Override one or more global settings in an instance\r\nd = Puree::Dataset.new endpoint:   ENV['ANOTHER_PURE_ENDPOINT'],  # optional, default nil\r\n                       username:   ENV['ANOTHER_PURE_USERNAME'],  # optional, default nil\r\n                       password:   ENV['ANOTHER_PURE_PASSWORD'],  # optional, default nil\r\n                       basic_auth: true                           # optional, default false\r\n```\r\n\r\n### Dataset\r\nGet the metadata into a hash.\r\n\r\n```ruby\r\nd = Puree::Dataset.new\r\n\r\n# Get metadata using ID\r\nmetadata = d.find id: 12345678\r\n\r\n# Reuse instance with another ID\r\nmetadata = d.find id: 87654321\r\n\r\n# Get metadata using UUID\r\nmetadata = d.find uuid: 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\r\n\r\n# Get specific metadata\r\nmetadata['doi']\r\n\r\n# Access HTTParty functionality\r\nd.response # HTTParty object\r\nd.response.body # XML\r\nd.response.code\r\nd.response.message\r\nd.response.headers # hash\r\n```\r\n\r\n### Collection (dataset)\r\nGet an array of metadata of resource type specified in constructor. The limit parameter has no maximum value.\r\n\r\n```ruby\r\nc = Puree::Collection.new resource: :dataset\r\n\r\n# Get metadata for fifty datasets, starting at record ten, created and modified in January 2016\r\nmetadata =  c.find limit:          50,            # optional, default 20, no maximum\r\n                   offset:         10,            # optional, default 0\r\n                   created_start:  '2016-01-01',  # optional\r\n                   created_end:    '2016-01-31',  # optional\r\n                   modified_start: '2016-01-01',  # optional\r\n                   modified_end:   '2016-01-31'   # optional\r\n```\r\n\r\n\r\nGet just the UUIDs\r\n\r\n`full: false`\r\n\r\n### Download (dataset)\r\nUses limit and offset like Collection. Resources available :dataset.\r\n\r\n```ruby\r\np = Puree::Download.new\r\nmetadata = p.find resource: :dataset,\r\n                  limit:    1000\r\n```\r\n\r\n## Resource data structures\r\n\r\n### Common to all\r\n#### created\r\n#### modified\r\n#### uuid\r\n\r\n### Dataset\r\naccess\r\nassociated\r\n\r\n#### available\r\nDate made available. If year is present, month and day will have data or an empty string.\r\n\r\n```ruby\r\n{\r\n  \"year\" => \"2016\",\r\n  \"month\" => \"2\",\r\n  \"day\" => \"4\"\r\n}\r\n```\r\n\r\n#### description\r\n#### doi\r\n\r\n#### file\r\nAn array of files.\r\n\r\n```ruby\r\n[\r\n  {\r\n    \"name\" => \"foo.csv\",\r\n    \"mime\" => \"application/octet-stream\",\r\n    \"size\" => \"1616665158\",\r\n    \"url\" => \"http://example.com/ws/rest/files/12345678/foo.csv\",\r\n    \"title\" => \"foo.csv\",\r\n    \"license\" => {\r\n      \"name\" => \"CC BY-NC\",\r\n      \"url\" => \"http://creativecommons.org/licenses/by-nc/4.0/\"\r\n    }\r\n  },\r\n]\r\n```\r\n\r\n#### geographical\r\n#### keyword\r\n\r\n#### link\r\nAn array of links.\r\n\r\n```ruby\r\n[\r\n  {\r\n    \"url\" => \"http://www.example.com/~abc1234/xyz/\",\r\n    \"description\" => \"An interesting description\"\r\n  },\r\n]\r\n```\r\n\r\n#### owner\r\nOrganisation responsible.\r\n\r\n```ruby\r\n{\r\n  \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\r\n  \"name\" => \"Institute for the Arts\",\r\n  \"type\" => \"Department\"\r\n}\r\n```\r\n\r\n#### person\r\nContains an array of internal persons, an array of external persons and an array of other persons.\r\n\r\n```ruby\r\n{\r\n  \"internal\" => [\r\n    {\r\n      \"name\" => {\r\n        \"first\" => \"Stan\",\r\n        \"last\" => \"Laurel\"\r\n       },\r\n       \"role\" => \"Creator\",\r\n       \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"\r\n    },\r\n  ],\r\n  \"external\" => [\r\n  ],\r\n  \"other\" => [\r\n    {\r\n      \"name\" => {\r\n        \"first\" => \"Hal\",\r\n        \"last\" => \"Roach\"\r\n      },\r\n      \"role\" => \"Contributor\",\r\n      \"uuid\" => \"\"\r\n    },\r\n  ]\r\n}\r\n```\r\n\r\n\r\n#### project\r\nAn array of projects associated with the dataset.\r\n\r\n```ruby\r\n[\r\n  {\r\n    \"title\" => \"An interesting project title\",\r\n    \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"\r\n  },\r\n]\r\n```\r\n\r\n#### publication\r\nAn array of research outputs associated with the dataset.\r\n\r\n```ruby\r\n[\r\n  {\r\n    \"type\" => \"Journal article\",\r\n    \"title\" => \"An interesting journal article title\",\r\n    \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"\r\n  },\r\n  {\r\n    \"type\" => \"Conference paper\",\r\n    \"title\" => \"An interesting conference paper title\",\r\n    \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"\r\n  },\r\n  {\r\n    \"type\" => \"Working paper\",\r\n    \"title\" => \"An interesting working paper title\",\r\n    \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"\r\n  },\r\n  {\r\n    \"type\" => \"Paper\",\r\n    \"title\" => \"An interesting paper title\",\r\n    \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"\r\n  },\r\n  {\r\n    \"type\" => \"Dataset\",\r\n    \"title\" => \"An interesting dataset title\",\r\n    \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"\r\n  },\r\n  {\r\n    \"type\" => \"Chapter\",\r\n    \"title\" => \"An interesting chapter title\",\r\n    \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\"\r\n  },\r\n]\r\n```\r\n\r\n#### publisher\r\n\r\n\r\n#### production, temporal\r\nDate range. If year is present, month and day will have data or an empty string.\r\n\r\n```ruby\r\n{\r\n  \"start\" => {\r\n    \"year\" => \"2005\",\r\n    \"month\" => \"5\",\r\n    \"day\" => \"10\"\r\n  },\r\n  \"end\" => {\r\n    \"year\" => \"2011\",\r\n    \"month\" => \"9\",\r\n    \"day\" => \"18\"\r\n  }\r\n}\r\n```\r\n\r\n#### title\r\n\r\n\r\n### Organisation\r\n\r\n#### address\r\nAn array of addresses.\r\n\r\n```ruby\r\n[\r\n  {\r\n    \"street\" => \"Lancaster University\",\r\n    \"building\" => \"Bowland North\",\r\n    \"postcode\" => \"LA1 4YN\",\r\n    \"city\" => \"Lancaster\",\r\n    \"country\" => \"United Kingdom\"\r\n  },\r\n]\r\n```\r\n\r\n#### parent\r\nParent organisation.\r\n\r\n```ruby\r\n{\r\n  \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\r\n  \"name\" => \"Institute for the Arts\",\r\n  \"type\" => \"Department\"\r\n}\r\n```\r\n\r\n### Project\r\n\r\n#### owner\r\nOrganisation responsible.\r\n\r\n```ruby\r\n{\r\n  \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\r\n  \"name\" => \"Institute for the Arts\",\r\n  \"type\" => \"Department\"\r\n}\r\n```\r\n\r\n#### temporal\r\n```ruby\r\n{\r\n  \"temporal\" => {\r\n    \"expected\" => {\r\n      \"start\" => \"2016-03-01Z\",\r\n      \"end\" => \"2018-02-28Z\"\r\n    },\r\n    \"actual\" => {\r\n      \"start\" => \"2016-03-01Z\",\r\n      \"end\" => \"\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Publication\r\n\r\n#### file\r\nAn array of files.\r\n\r\n```ruby\r\n[\r\n  {\r\n    \"name\" => \"foo.csv\",\r\n    \"mime\" => \"application/octet-stream\",\r\n    \"size\" => \"1616665158\",\r\n    \"url\" => \"http://example.com/ws/rest/files/12345678/foo.csv\",\r\n  },\r\n]\r\n```\r\n\r\n## Other data structures\r\n### Download\r\nAn array of hashes, where each hash is a resource.\r\n\r\n```ruby\r\n[\r\n  {\r\n    \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\r\n    \"download\" => \"1999\"\r\n  },\r\n  {\r\n    \"uuid\" => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\r\n    \"download\" => \"666\"\r\n  },\r\n]\r\n```\r\n\r\n## Utilities\r\n\r\n### Convert date to ISO 8601 format.\r\n\r\n```ruby\r\nPuree::Date.iso d.available\r\n```\r\n```ruby\r\n{\r\n  \"year\" => \"2016\",\r\n  \"month\" => \"4\",\r\n  \"day\" => \"18\"\r\n}\r\n```\r\nbecomes\r\n\r\n```ruby\r\n\"2016-04-18\"\r\n```\r\n\r\n\r\n## API coverage\r\nVersion\r\n\r\n```ruby\r\n5.5.1\r\n```\r\n\r\nResource metadata\r\n\r\n```ruby\r\n:dataset\r\n:event\r\n:organisation\r\n:person\r\n:publication\r\n```\r\n\r\nCollections\r\n\r\n```ruby\r\n:dataset\r\n:event\r\n:journal\r\n:organisation\r\n:person\r\n:project\r\n:publication\r\n:publisher\r\n```\r\n\r\nOther metadata\r\n\r\n```ruby\r\n:download\r\n:server\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}